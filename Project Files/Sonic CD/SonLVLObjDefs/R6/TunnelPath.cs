using SonicRetro.SonLVL.API;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Drawing;

namespace SCDObjectDefinitions.R6
{
	// (all these values are taken directly from each object's respective giant case switch)
	
	class TunnelPath1 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x2000, 0x1500,
				0x2000, 0x81500,
				0x2000, 0x101500,
				0x2000, 0x181500,
				0x2000, 0x201500,
				0x2000, 0x281500,
				0x2000, 0x301500,
				0x2000, 0x381500,
				0x2000, 0x401500,
				0x2000, 0x481500,
				0x2000, 0x501500,
				0x2000, 0x581500,
				0x2000, 0x601500,
				0x2000, 0x681500,
				0x2000, 0x701500,
				0x2000, 0x781500,
				0x2000, 0x801500,
				0x2000, 0x881500,
				0x2000, 0x901500,
				0x2000, 0x981500,
				0x2000, 0xA01500,
				0x2000, 0xA81500,
				0x2000, 0xB01500,
				0x2000, 0xB81500,
				0x2000, 0xC01500,
				0x2000, 0xC81500,
				0x2000, 0xD01500,
				0x2000, 0xD81500,
				0x2000, 0xE01500,
				0x2000, 0xE81500,
				0x2000, 0xF01500,
				0x2000, 0xF81500,
				0x2000, 0x1001500,
				0x2000, 0x1081500,
				0x2000, 0x1101500,
				0x2000, 0x1181500,
				0x2000, 0x1201500,
				0x2000, 0x1281500,
				0x2000, 0x1301500,
				0x2000, 0x1381500,
				0x2000, 0x1401500,
				0x2000, 0x1481500,
				0x2000, 0x1501500,
				-0x7E000, 0x1501500,
				-0xFE000, 0x1501500,
				-0x17E000, 0x1501500,
				-0x1FE000, 0x1501500,
				-0x27E000, 0x1501500,
				-0x2FE000, 0x1501500,
				-0x37E000, 0x1501500,
				-0x3FE000, 0x1501500,
				-0x47E000, 0x1501500,
				-0x4FE000, 0x1501500,
				-0x57E000, 0x1501500,
				-0x5FE000, 0x1501500,
				-0x67E000, 0x1501500,
				-0x67E000, 0x1581500,
				-0x67E000, 0x1601500,
				-0x67E000, 0x1681500,
				-0x67E000, 0x1701500,
				-0x67E000, 0x1781500,
				-0x67E000, 0x1801500,
				-0x67E000, 0x1881500,
				-0x67E000, 0x1901500,
				-0x67E000, 0x1981500,
				-0x67E000, 0x1A01500,
				-0x67E000, 0x1A81500,
				-0x67E000, 0x1B01500,
				-0x67E000, 0x1B81500,
				-0x67E000, 0x1C01500,
				-0x67E000, 0x1C81500,
				-0x67E000, 0x1D01500,
				-0x67E000, 0x1D81500,
				-0x67E000, 0x1E01500,
				-0x67E000, 0x1E81500,
				-0x67E000, 0x1F01500,
				-0x67E000, 0x1F81500,
				-0x67E000, 0x2001500,
				-0x5FE000, 0x2001500,
				-0x57E000, 0x2001500,
				-0x4FE000, 0x2001500,
				-0x47E000, 0x2001500,
				-0x3FE000, 0x2001500,
				-0x37E000, 0x2001500,
				-0x2FE000, 0x2001500,
				-0x27E000, 0x2001500,
				-0x1FE000, 0x2001500,
				-0x17E000, 0x2001500,
				-0xFE000, 0x2001500,
				-0x7E000, 0x2001500,
				-0xFE000, 0x2001500,
				-0x17E000, 0x2001500,
				-0x1FE000, 0x2001500,
				-0x27E000, 0x2001500,
				-0x2FE000, 0x2001500,
				-0x37E000, 0x2001500,
				-0x37E000, 0x2081500,
				-0x37E000, 0x2101500,
				-0x37E000, 0x2181500,
				-0x37E000, 0x2201500,
				-0x37E000, 0x2281500,
				-0x37E000, 0x2301500,
				-0x37E000, 0x2381500,
				-0x37E000, 0x2401500,
				-0x37E000, 0x2481500,
				-0x37E000, 0x2501500,
				-0x37E000, 0x2581500,
				-0x37E000, 0x2601500,
				-0x37E000, 0x2681500,
				-0x37E000, 0x2701500,
				-0x37E000, 0x2781500,
				-0x37E000, 0x2801500,
				-0x37E000, 0x2881500,
				-0x37E000, 0x2901500,
				-0x37E000, 0x2981500,
				-0x37E000, 0x2A01500,
				-0x37E000, 0x2A81500,
				-0x37E000, 0x2B01500,
				-0x37E000, 0x2B81500,
				-0x37E000, 0x2C01500,
				-0x37E000, 0x2C81500,
				-0x37E000, 0x2D01500,
				-0x37E000, 0x2D81500,
				-0x37E000, 0x2E01500,
				-0x37E000, 0x2E81500,
				-0x37E000, 0x2F01500,
				-0x37E000, 0x2F81500,
				-0x37E000, 0x3001500,
				-0x37E000, 0x3081500,
				-0x37E000, 0x3101500,
				-0x37E000, 0x3181500,
				-0x37E000, 0x3201500,
				-0x37E000, 0x3281500,
				-0x2FE000, 0x3281500,
				-0x27E000, 0x3281500,
				-0x1FE000, 0x3281500,
				-0x17E000, 0x3281500,
				-0xFE000, 0x3281500,
				-0x7E000, 0x3281500,
				0x2000, 0x3281500,
				0x82000, 0x3281500,
				0x102000, 0x3281500,
				0x182000, 0x3281500,
				0x202000, 0x3281500,
				0x282000, 0x3281500,
				0x302000, 0x3281500,
				0x382000, 0x3281500,
				0x402000, 0x3281500,
				0x482000, 0x3281500,
				0x502000, 0x3281500,
				0x582000, 0x3281500,
				0x602000, 0x3281500,
				0x682000, 0x3281500,
				0x702000, 0x3281500,
				0x782000, 0x3281500,
				0x802000, 0x3281500,
				0x882000, 0x3281500,
				0x902000, 0x3281500,
				0x982000, 0x3281500,
				0xA02000, 0x3281500,
				0xA82000, 0x3281500,
				0xB02000, 0x3281500,
				0xB82000, 0x3281500,
				0xC02000, 0x3281500,
				0xC82000, 0x3281500,
				0xD02000, 0x3281500,
				0xD82000, 0x3281500,
				0xE02000, 0x3281500,
				0xE82000, 0x3281500,
				0xF02000, 0x3281500,
				0xF82000, 0x3281500,
				0x1002000, 0x3281500,
				0x1082000, 0x3281500,
				0x1102000, 0x3281500,
				0x1182000, 0x3281500,
				0x1202000, 0x3281500,
				0x1282000, 0x3281500,
				0x1302000, 0x3281500,
				0x1382000, 0x3281500,
				0x1402000, 0x3281500,
				0x1482000, 0x3281500,
				0x1502000, 0x3281500,
				0x1582000, 0x3281500,
				0x1602000, 0x3281500,
				0x1682000, 0x3281500,
				0x1702000, 0x3281500,
				0x1782000, 0x3281500,
				0x1802000, 0x3281500,
				0x1882000, 0x3281500,
				0x1902000, 0x3281500,
				0x1982000, 0x3281500,
				0x1A02000, 0x3281500,
				0x1A82000, 0x3281500,
				0x1B02000, 0x3281500,
				0x1B82000, 0x3281500,
				0x1C02000, 0x3281500,
				0x1C82000, 0x3281500,
				0x1D02000, 0x3281500,
				0x1D82000, 0x3281500,
				0x1E02000, 0x3281500,
				0x1E82000, 0x3281500,
				0x1F02000, 0x3281500,
				0x1F82000, 0x3281500,
				0x2002000, 0x3281500,
				0x2082000, 0x3281500,
				0x2102000, 0x3281500,
				0x2182000, 0x3281500,
				0x2182000, 0x3301500,
				0x2182000, 0x3381500,
				0x2182000, 0x3401500,
				0x2182000, 0x3481500,
				0x2182000, 0x3501500,
				0x2182000, 0x3581500,
				0x2182000, 0x3601500,
				0x2182000, 0x3681500,
				0x2182000, 0x3701500,
				0x2202000, 0x3701500,
				0x2282000, 0x3701500,
				0x2302000, 0x3701500,
				0x2382000, 0x3701500,
				0x2402000, 0x3701500,
				0x2482000, 0x3701500,
				0x2502000, 0x3701500,
				0x2582000, 0x3701500,
				0x2602000, 0x3701500,
				0x2682000, 0x3701500,
				0x2702000, 0x3701500,
				0x2782000, 0x3701500,
				0x2802000, 0x3701500,
				0x2882000, 0x3701500,
				0x2902000, 0x3701500,
				0x2982000, 0x3701500,
				0x2A02000, 0x3701500,
				0x2A82000, 0x3701500,
				0x2B02000, 0x3701500,
				0x2B82000, 0x3701500,
				0x2C02000, 0x3701500,
				0x2C82000, 0x3701500,
				0x2D02000, 0x3701500,
				0x2D82000, 0x3701500,
				0x2E02000, 0x3701500,
				0x2E82000, 0x3701500,
				0x2F02000, 0x3701500,
				0x2F82000, 0x3701500,
				0x3002000, 0x3701500,
				0x3082000, 0x3701500,
				0x3102000, 0x3701500,
				0x3182000, 0x3701500,
				0x3202000, 0x3701500,
				0x3282000, 0x3701500,
				0x3302000, 0x3701500,
				0x3382000, 0x3701500,
				0x3402000, 0x3701500,
				0x3482000, 0x3701500,
				0x3502000, 0x3701500,
				0x3582000, 0x3701500,
				0x3602000, 0x3701500,
				0x3682000, 0x3701500,
				0x3702000, 0x3701500,
				0x3782000, 0x3701500,
				0x3802000, 0x3701500,
				0x3882000, 0x3701500,
				0x3902000, 0x3701500,
				0x3982000, 0x3701500,
				0x3A02000, 0x3701500,
				0x3A82000, 0x3701500,
				0x3B02000, 0x3701500,
				0x3B82000, 0x3701500,
				0x3C02000, 0x3701500,
				0x3C82000, 0x3701500,
				0x3D02000, 0x3704D00
			};
		}
	}
	
	class TunnelPath2 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0xB700, 0xCA00,
				0xB700, 0x8CA00,
				0xB700, 0x10CA00,
				0xB700, 0x18CA00,
				0xB700, 0x20CA00,
				0xB700, 0x28CA00,
				0xB700, 0x30CA00,
				0xB700, 0x38CA00,
				0xB700, 0x40CA00,
				0xB700, 0x48CA00,
				0xB700, 0x50CA00,
				0xB700, 0x58CA00,
				0xB700, 0x60CA00,
				0xB700, 0x68CA00,
				0xB700, 0x70CA00,
				0xB700, 0x78CA00,
				0xB700, 0x80CA00,
				0xB700, 0x88CA00,
				0xB700, 0x90CA00,
				0xB700, 0x98CA00,
				0xB700, 0xA0CA00,
				0xB700, 0xA8CA00,
				0xB700, 0xB0CA00,
				0xB700, 0xB8CA00,
				0xB700, 0xC0CA00,
				0xB700, 0xC8CA00,
				0xB700, 0xD0CA00,
				0xB700, 0xD8CA00,
				0xB700, 0xE0CA00,
				0xB700, 0xE8CA00,
				0xB700, 0xF0CA00,
				0xB700, 0xF8CA00,
				0xB700, 0x100CA00,
				0xB700, 0x108CA00,
				0xB700, 0x110CA00,
				0xB700, 0x118CA00,
				0xB700, 0x120CA00,
				0xB700, 0x128CA00,
				0xB700, 0x130CA00,
				0xB700, 0x138CA00,
				0xB700, 0x140CA00,
				0xB700, 0x148CA00,
				0xB700, 0x150CA00,
				0xB700, 0x158CA00,
				0xB700, 0x160CA00,
				0xB700, 0x168CA00,
				0xB700, 0x170CA00,
				0xB700, 0x178CA00,
				0xB700, 0x180CA00,
				0xB700, 0x188CA00,
				0xB700, 0x190CA00,
				0xB700, 0x198CA00,
				0xB700, 0x1A0CA00,
				0xB700, 0x1A8CA00,
				0xB700, 0x1B0CA00,
				0xB700, 0x1B8CA00,
				0xB700, 0x1C0CA00,
				0xB700, 0x1C8CA00,
				0xB700, 0x1D0CA00,
				0xB700, 0x1D8CA00,
				0xB700, 0x1E0CA00,
				0xB700, 0x1E8CA00,
				0xB700, 0x1F0CA00,
				0xB700, 0x1F8CA00,
				0xB700, 0x200CA00,
				0xB700, 0x208CA00,
				0xB700, 0x210CA00,
				0xB700, 0x218CA00,
				0xB700, 0x220CA00,
				0xB700, 0x228CA00,
				0xB700, 0x230CA00,
				0xB700, 0x238CA00,
				0xB700, 0x240CA00,
				0xB700, 0x248CA00,
				0xB700, 0x250CA00,
				0xB700, 0x258CA00,
				0xB700, 0x260CA00,
				0xB700, 0x268CA00,
				0xB700, 0x270CA00,
				0xB700, 0x278CA00,
				0xB700, 0x280CA00,
				0xB700, 0x288CA00,
				0xB700, 0x290CA00,
				0xB700, 0x298CA00,
				0xB700, 0x2A0CA00,
				0xB700, 0x2A8CA00,
				0x8B700, 0x2A8CA00,
				0x10B700, 0x2A8CA00,
				0x18B700, 0x2A8CA00,
				0x20B700, 0x2A8CA00,
				0x28B700, 0x2A8CA00,
				0x30B700, 0x2A8CA00,
				0x38B700, 0x2A8CA00,
				0x40B700, 0x2A8CA00,
				0x48B700, 0x2A8CA00,
				0x50B700, 0x2A8CA00
			};
		}
	}
	
	class TunnelPath3 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x2700, 0x6200,
				0x82700, 0x6200,
				0x82700, -0x79E00,
				0x82700, -0xF9E00,
				0x82700, -0x179E00,
				0x82700, -0x1F9E00,
				0x82700, -0x279E00,
				0x82700, -0x2F9E00,
				0x82700, -0x379E00,
				0x82700, -0x3F9E00,
				0x82700, -0x479E00,
				0x82700, -0x4F9E00,
				0x82700, -0x579E00,
				0x82700, -0x5F9E00,
				0x82700, -0x679E00,
				0x82700, -0x6F9E00,
				0x82700, -0x779E00,
				0x82700, -0x7F9E00,
				0x82700, -0x879E00,
				0x82700, -0x8F9E00,
				0x82700, -0x979E00,
				0x82700, -0x9F9E00,
				0x82700, -0xA79E00,
				0x82700, -0xAF9E00,
				0x82700, -0xB79E00,
				0x82700, -0xBF9E00,
				0x82700, -0xC79E00,
				0x82700, -0xCF9E00,
				0x82700, -0xD79E00,
				0x82700, -0xDF9E00,
				0x82700, -0xE79E00,
				0x82700, -0xEF9E00,
				0x82700, -0xF79E00,
				0x82700, -0xFF9E00,
				0x102700, -0xFF9E00,
				0x182700, -0xFF9E00,
				0x202700, -0xFF9E00,
				0x282700, -0xFF9E00,
				0x302700, -0xFF9E00,
				0x382700, -0xFF9E00,
				0x402700, -0xFF9E00
			};
		}
	}
	
	class TunnelPath4 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x8B00, 0x8200,
				0x88B00, 0x8200,
				0x88B00, 0x88200,
				0x88B00, 0x108200,
				0x88B00, 0x188200,
				0x88B00, 0x208200,
				0x88B00, 0x288200,
				0x88B00, 0x308200,
				0x88B00, 0x388200,
				0x88B00, 0x408200,
				0x88B00, 0x488200,
				0x88B00, 0x508200,
				0x88B00, 0x588200,
				0x88B00, 0x608200,
				0x88B00, 0x688200,
				0x88B00, 0x708200,
				0x88B00, 0x788200,
				0x88B00, 0x808200,
				0x88B00, 0x888200,
				0x88B00, 0x908200,
				0x88B00, 0x988200,
				0x88B00, 0xA08200,
				0x88B00, 0xA88200,
				0x88B00, 0xB08200,
				0x88B00, 0xB88200,
				0x88B00, 0xC08200,
				0x88B00, 0xC88200,
				0x88B00, 0xD08200,
				0x88B00, 0xD88200,
				0x88B00, 0xE08200,
				0x88B00, 0xE88200,
				0x88B00, 0xF08200,
				0x88B00, 0xF88200,
				0x88B00, 0x1008200,
				0x108B00, 0x1008200,
				0x188B00, 0x1008200,
				0x208B00, 0x1008200,
				0x288B00, 0x1008200,
				0x308B00, 0x1008200,
				0x388B00, 0x1008200,
				0x408B00, 0x1008200
			};
		}
	}
	
	class TunnelPath5 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x7700, 0x9C00, 
				0x7700, 0x89C00, 
				0x7700, 0x109C00, 
				0x7700, 0x189C00, 
				0x7700, 0x209C00, 
				0x7700, 0x289C00, 
				0x7700, 0x309C00, 
				0x7700, 0x389C00, 
				0x7700, 0x409C00, 
				0x7700, 0x489C00, 
				0x7700, 0x509C00, 
				0x7700, 0x589C00, 
				0x7700, 0x609C00, 
				0x7700, 0x689C00, 
				0x7700, 0x709C00, 
				0x7700, 0x789C00, 
				0x7700, 0x809C00, 
				0x7700, 0x889C00, 
				0x7700, 0x909C00, 
				0x7700, 0x989C00, 
				0x7700, 0xA09C00, 
				0x7700, 0xA89C00, 
				0x7700, 0xB09C00, 
				0x7700, 0xB89C00, 
				0x7700, 0xC09C00, 
				0x7700, 0xC89C00, 
				0x7700, 0xD09C00, 
				0x7700, 0xD89C00, 
				0x7700, 0xE09C00, 
				0x7700, 0xE89C00, 
				0x7700, 0xF09C00, 
				0x7700, 0xF89C00, 
				0x7700, 0x1009C00, 
				0x7700, 0x1089C00, 
				0x7700, 0x1109C00, 
				0x7700, 0x1189C00, 
				0x7700, 0x1209C00, 
				0x7700, 0x1289C00, 
				0x7700, 0x1309C00, 
				0x7700, 0x1389C00, 
				0x7700, 0x1409C00, 
				0x7700, 0x1489C00, 
				0x7700, 0x1509C00, 
				0x7700, 0x1589C00, 
				0x7700, 0x1609C00, 
				0x7700, 0x1689C00, 
				0x7700, 0x1709C00, 
				0x7700, 0x1789C00, 
				0x7700, 0x1809C00, 
				0x7700, 0x1889C00, 
				0x7700, 0x1909C00, 
				0x7700, 0x1989C00, 
				0x7700, 0x1A09C00, 
				0x7700, 0x1A89C00, 
				0x7700, 0x1B09C00, 
				0x7700, 0x1B89C00, 
				0x7700, 0x1C09C00, 
				0x7700, 0x1C89C00, 
				0x7700, 0x1D09C00, 
				0x7700, 0x1D89C00, 
				0x7700, 0x1E09C00, 
				0x7700, 0x1E89C00, 
				0x7700, 0x1F09C00, 
				0x7700, 0x1F89C00, 
				0x7700, 0x2009C00, 
				0x7700, 0x2089C00, 
				0x7700, 0x2109C00, 
				0x7700, 0x2189C00, 
				0x7700, 0x2209C00, 
				0x7700, 0x2289C00, 
				0x7700, 0x2309C00, 
				0x7700, 0x2389C00, 
				0x7700, 0x2409C00, 
				0x7700, 0x2489C00, 
				0x7700, 0x2509C00, 
				0x7700, 0x2589C00, 
				0x7700, 0x2609C00, 
				0x7700, 0x2689C00, 
				0x7700, 0x2709C00, 
				0x7700, 0x2789C00, 
				0x7700, 0x2809C00, 
				0x7700, 0x2889C00, 
				0x7700, 0x2909C00, 
				0x7700, 0x2989C00, 
				0x7700, 0x2A09C00, 
				0x7700, 0x2A89C00, 
				-0x78900, 0x2A89C00, 
				-0xF8900, 0x2A89C00, 
				-0x178900, 0x2A89C00, 
				-0x1F8900, 0x2A89C00, 
				-0x278900, 0x2A89C00, 
				-0x2F8900, 0x2A89C00, 
				-0x378900, 0x2A89C00, 
				-0x3F8900, 0x2A89C00, 
				-0x478900, 0x2A89C00, 
				-0x4F8900, 0x2A89C00, 
				-0x578900, 0x2A89C00, 
				-0x5F8900, 0x2A89C00, 
				-0x678900, 0x2A89C00, 
				-0x6F8900, 0x2A89C00, 
				-0x778900, 0x2A89C00, 
				-0x778900, 0x2B09C00, 
				-0x778900, 0x2B89C00, 
				-0x778900, 0x2C09C00, 
				-0x778900, 0x2C89C00, 
				-0x778900, 0x2D09C00, 
				-0x778900, 0x2D89C00, 
				-0x778900, 0x2E09C00, 
				-0x778900, 0x2E89C00, 
				-0x778900, 0x2F09C00, 
				-0x778900, 0x2F89C00, 
				-0x778900, 0x3009C00, 
				-0x778900, 0x3089C00, 
				-0x778900, 0x3109C00, 
				-0x778900, 0x3189C00, 
				-0x778900, 0x3209C00, 
				-0x778900, 0x3289C00, 
				-0x778900, 0x3309C00, 
				-0x778900, 0x3389C00, 
				-0x778900, 0x3409C00, 
				-0x778900, 0x3489C00, 
				-0x778900, 0x3509C00, 
				-0x778900, 0x3589C00, 
				-0x6F8900, 0x3589C00, 
				-0x678900, 0x3589C00, 
				-0x5F8900, 0x3589C00, 
				-0x578900, 0x3589C00, 
				-0x4F8900, 0x3589C00, 
				-0x478900, 0x3589C00, 
				-0x3F8900, 0x3589C00, 
				-0x378900, 0x3589C00, 
				-0x2F8900, 0x3589C00, 
				-0x278900, 0x3589C00, 
				-0x1F8900, 0x3589C00, 
				-0x178900, 0x3589C00, 
				-0x1F8900, 0x3589C00, 
				-0x278900, 0x3589C00, 
				-0x2F8900, 0x3589C00, 
				-0x378900, 0x3589C00, 
				-0x3F8900, 0x3589C00, 
				-0x478900, 0x3589C00, 
				-0x478900, 0x3609C00, 
				-0x478900, 0x3689C00, 
				-0x478900, 0x3709C00, 
				-0x478900, 0x3789C00, 
				-0x478900, 0x3809C00, 
				-0x478900, 0x3889C00, 
				-0x478900, 0x3909C00, 
				-0x478900, 0x3989C00, 
				-0x478900, 0x3A09C00, 
				-0x478900, 0x3A89C00, 
				-0x478900, 0x3B09C00, 
				-0x478900, 0x3B89C00, 
				-0x478900, 0x3C09C00, 
				-0x478900, 0x3C89C00, 
				-0x478900, 0x3D09C00, 
				-0x478900, 0x3D89C00, 
				-0x478900, 0x3E09C00, 
				-0x478900, 0x3E89C00, 
				-0x478900, 0x3F09C00, 
				-0x478900, 0x3F89C00, 
				-0x478900, 0x4009C00, 
				-0x478900, 0x4089C00, 
				-0x478900, 0x4109C00, 
				-0x478900, 0x4189C00, 
				-0x478900, 0x4209C00, 
				-0x478900, 0x4289C00, 
				-0x478900, 0x4309C00, 
				-0x478900, 0x4389C00, 
				-0x478900, 0x4409C00, 
				-0x478900, 0x4489C00, 
				-0x478900, 0x4509C00, 
				-0x478900, 0x4589C00, 
				-0x478900, 0x4609C00, 
				-0x478900, 0x4689C00, 
				-0x478900, 0x4709C00, 
				-0x478900, 0x4789C00, 
				-0x478900, 0x4809C00, 
				-0x478900, 0x4889C00, 
				-0x478900, 0x4909C00, 
				-0x478900, 0x4989C00, 
				-0x478900, 0x4A09C00, 
				-0x478900, 0x4A89C00, 
				-0x478900, 0x4B09C00, 
				-0x478900, 0x4B89C00, 
				-0x478900, 0x4C09C00, 
				-0x478900, 0x4C89C00
			};
		}
	}
	
	class TunnelPath6 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x2500, 0x9000,
				0x2500, 0x89000,
				0x2500, 0x109000,
				0x2500, 0x189000,
				0x2500, 0x209000,
				0x2500, 0x289000,
				0x2500, 0x309000,
				0x2500, 0x389000,
				0x2500, 0x409000,
				0x2500, 0x489000,
				0x2500, 0x509000,
				0x2500, 0x589000,
				0x2500, 0x609000,
				0x2500, 0x689000,
				0x2500, 0x709000,
				0x2500, 0x789000,
				0x2500, 0x809000,
				0x2500, 0x889000,
				0x2500, 0x909000,
				0x2500, 0x989000,
				0x2500, 0xA09000,
				0x2500, 0xA89000,
				0x2500, 0xB09000,
				0x2500, 0xB89000,
				0x2500, 0xC09000,
				0x2500, 0xC89000,
				0x2500, 0xD09000,
				0x2500, 0xD89000,
				0x2500, 0xE09000,
				0x2500, 0xE89000,
				0x2500, 0xF09000,
				0x2500, 0xF89000,
				0x2500, 0x1009000,
				0x2500, 0x1089000,
				0x2500, 0x1109000,
				0x2500, 0x1189000,
				0x2500, 0x1209000,
				0x2500, 0x1289000,
				0x2500, 0x1309000,
				0x2500, 0x1389000,
				0x2500, 0x1409000,
				0x2500, 0x1489000,
				0x2500, 0x1509000,
				0x2500, 0x1589000,
				0x2500, 0x1609000,
				0x2500, 0x1689000,
				0x2500, 0x1709000,
				0x2500, 0x1789000,
				0x2500, 0x1809000,
				0x2500, 0x1889000,
				0x2500, 0x1909000,
				0x2500, 0x1989000,
				0x2500, 0x1A09000,
				0x2500, 0x1A89000,
				0x2500, 0x1B09000,
				0x2500, 0x1B89000,
				0x2500, 0x1C09000,
				0x2500, 0x1C89000,
				0x2500, 0x1D09000,
				0x2500, 0x1D89000,
				0x2500, 0x1E09000,
				0x2500, 0x1E89000,
				0x2500, 0x1F09000,
				0x2500, 0x1F89000,
				0x2500, 0x2009000,
				0x2500, 0x2089000,
				-0x7DB00, 0x2089000,
				-0xFDB00, 0x2089000,
				-0x17DB00, 0x2089000,
				-0x1FDB00, 0x2089000,
				-0x27DB00, 0x2089000,
				-0x2FDB00, 0x2089000,
				-0x37DB00, 0x2089000,
				-0x3FDB00, 0x2089000,
				-0x47DB00, 0x2089000,
				-0x4FDB00, 0x2089000,
				-0x57DB00, 0x2089000,
				-0x5FDB00, 0x2089000,
				-0x67DB00, 0x2089000,
				-0x6FDB00, 0x2089000,
				-0x77DB00, 0x2089000,
				-0x77DB00, 0x2109000,
				-0x77DB00, 0x2189000,
				-0x77DB00, 0x2209000,
				-0x77DB00, 0x2289000,
				-0x77DB00, 0x2309000,
				-0x77DB00, 0x2389000,
				-0x77DB00, 0x2409000,
				-0x77DB00, 0x2489000,
				-0x77DB00, 0x2509000,
				-0x77DB00, 0x2589000,
				-0x77DB00, 0x2609000,
				-0x77DB00, 0x2689000,
				-0x77DB00, 0x2709000,
				-0x77DB00, 0x2789000,
				-0x77DB00, 0x2809000,
				-0x77DB00, 0x2889000,
				-0x77DB00, 0x2909000,
				-0x77DB00, 0x2989000,
				-0x77DB00, 0x2A09000,
				-0x77DB00, 0x2A89000,
				-0x77DB00, 0x2B09000,
				-0x77DB00, 0x2B89000,
				-0x6FDB00, 0x2B89000,
				-0x67DB00, 0x2B89000,
				-0x5FDB00, 0x2B89000,
				-0x57DB00, 0x2B89000,
				-0x4FDB00, 0x2B89000,
				-0x47DB00, 0x2B89000,
				-0x3FDB00, 0x2B89000,
				-0x37DB00, 0x2B89000,
				-0x2FDB00, 0x2B89000,
				-0x27DB00, 0x2B89000,
				-0x1FDB00, 0x2B89000,
				-0x17DB00, 0x2B89000,
				-0x1FDB00, 0x2B89000,
				-0x27DB00, 0x2B89000,
				-0x2FDB00, 0x2B89000,
				-0x37DB00, 0x2B89000,
				-0x37DB00, 0x2C09000,
				-0x37DB00, 0x2C89000,
				-0x37DB00, 0x2D09000,
				-0x37DB00, 0x2D89000,
				-0x37DB00, 0x2E09000,
				-0x37DB00, 0x2E89000,
				-0x37DB00, 0x2F09000,
				-0x37DB00, 0x2F89000,
				-0x37DB00, 0x3009000,
				-0x37DB00, 0x3089000,
				-0x37DB00, 0x3109000,
				-0x37DB00, 0x3189000,
				-0x2FDB00, 0x3189000,
				-0x27DB00, 0x3189000,
				-0x1FDB00, 0x3189000,
				-0x17DB00, 0x3189000,
				-0xFDB00, 0x3189000,
				-0x7DB00, 0x3189000,
				0x2500, 0x3189000,
				0x82500, 0x3189000,
				0x102500, 0x3189000,
				0x182500, 0x3189000,
				0x202500, 0x3189000,
				0x282500, 0x3189000,
				0x302500, 0x3189000,
				0x382500, 0x3189000,
				0x402500, 0x3189000,
				0x482500, 0x3189000,
				0x502500, 0x3189000,
				0x582500, 0x3189000,
				0x602500, 0x3189000,
				0x682500, 0x3189000,
				0x702500, 0x3189000,
				0x782500, 0x3189000,
				0x802500, 0x3189000,
				0x882500, 0x3189000,
				0x902500, 0x3189000,
				0x982500, 0x3189000,
				0xA02500, 0x3189000,
				0xA82500, 0x3189000,
				0xB02500, 0x3189000,
				0xB82500, 0x3189000,
				0xC02500, 0x3189000,
				0xC82500, 0x3189000,
				0xD02500, 0x3189000,
				0xD82500, 0x3189000,
				0xE02500, 0x3189000,
				0xE82500, 0x3189000,
				0xF02500, 0x3189000,
				0xF82500, 0x3189000,
				0x1002500, 0x3189000,
				0x1082500, 0x3189000,
				0x1102500, 0x3189000,
				0x1182500, 0x3189000,
				0x1202500, 0x3189000,
				0x1282500, 0x3189000,
				0x1302500, 0x3189000,
				0x1382500, 0x3189000,
				0x1402500, 0x3189000,
				0x1482500, 0x3189000,
				0x1502500, 0x3189000,
				0x1582500, 0x3189000,
				0x1602500, 0x3189000,
				0x1682500, 0x3189000,
				0x1702500, 0x3189000,
				0x1782500, 0x3189000,
				0x1802500, 0x3189000,
				0x1882500, 0x3189000,
				0x1902500, 0x3189000,
				0x1982500, 0x3189000,
				0x1A02500, 0x3189000,
				0x1A82500, 0x3189000,
				0x1B02500, 0x3189000,
				0x1B82500, 0x3189000,
				0x1C02500, 0x3189000,
				0x1C82500, 0x3189000,
				0x1D02500, 0x3189000,
				0x1D82500, 0x3189000,
				0x1E02500, 0x3189000,
				0x1E82500, 0x3189000,
				0x1F02500, 0x3189000,
				0x1F82500, 0x3189000,
				0x2002500, 0x3189000,
				0x2082500, 0x3189000,
				0x2102500, 0x3189000,
				0x2182500, 0x3189000,
				0x2202500, 0x3189000,
				0x2282500, 0x3189000,
				0x2302500, 0x3189000,
				0x2382500, 0x3189000,
				0x2402500, 0x3189000,
				0x2482500, 0x3189000,
				0x2502500, 0x3189000,
				0x2582500, 0x3189000
			};
		}
	}
	
	class TunnelPath7 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x2B00, 0x2000,
				0x82B00, 0x2000,
				0x102B00, 0x2000,
				0x182B00, 0x2000,
				0x202B00, 0x2000,
				0x282B00, 0x2000,
				0x302B00, 0x2000,
				0x382B00, 0x2000,
				0x402B00, 0x2000,
				0x482B00, 0x2000,
				0x502B00, 0x2000,
				0x582B00, 0x2000,
				0x602B00, 0x2000,
				0x682B00, 0x2000,
				0x702B00, 0x2000,
				0x782B00, 0x2000,
				0x802B00, 0x2000,
				0x882B00, 0x2000,
				0x902B00, 0x2000,
				0x982B00, 0x2000,
				0xA02B00, 0x2000,
				0xA82B00, 0x2000,
				0xB02B00, 0x2000,
				0xB82B00, 0x2000,
				0xC02B00, 0x2000,
				0xC82B00, 0x2000,
				0xD02B00, 0x2000,
				0xD82B00, 0x2000,
				0xE02B00, 0x2000,
				0xE82B00, 0x2000,
				0xF02B00, 0x2000,
				0xF82B00, 0x2000,
				0x1002B00, 0x2000,
				0x1082B00, 0x2000,
				0x1102B00, 0x2000,
				0x1182B00, 0x2000,
				0x1202B00, 0x2000,
				0x1282B00, 0x2000,
				0x1302B00, 0x2000,
				0x1382B00, 0x5800
			};
		}
	}
	
	class TunnelPath8 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0, 0x7D00, 
				0x80000, 0x7D00, 
				0x100000, 0x7D00, 
				0x180000, 0x7D00, 
				0x200000, 0x7D00, 
				0x280000, 0x7D00, 
				0x300000, 0x7D00, 
				0x380000, 0x7D00, 
				0x400000, 0x7D00, 
				0x480000, 0x7D00, 
				0x500000, 0x7D00, 
				0x580000, 0x7D00, 
				0x600000, 0x7D00, 
				0x680000, 0x7D00, 
				0x700000, 0x7D00, 
				0x780000, 0x7D00, 
				0x800000, 0x7D00, 
				0x880000, 0x7D00, 
				0x900000, 0x7D00, 
				0x980000, 0x7D00, 
				0xA00000, 0x7D00, 
				0xA80000, 0x7D00, 
				0xB00000, 0x7D00, 
				0xB80000, 0x7D00, 
				0xC00000, 0x7D00, 
				0xC80000, 0x7D00, 
				0xD00000, 0x7D00, 
				0xD80000, 0x7D00, 
				0xE00000, 0x7D00, 
				0xE80000, 0x7D00, 
				0xF00000, 0x7D00, 
				0xF80000, 0x7D00, 
				0x1000000, 0x7D00, 
				0x1080000, 0x7D00, 
				0x1100000, 0x7D00, 
				0x1180000, 0x7D00, 
				0x1200000, 0x7D00, 
				0x1280000, 0x7D00, 
				0x1300000, 0x7D00, 
				0x1380000, 0x7D00, 
				0x1400000, 0x7D00, 
				0x1480000, 0x7D00, 
				0x1500000, 0x7D00, 
				0x1580000, 0x7D00, 
				0x1600000, 0x7D00, 
				0x1680000, 0x7D00, 
				0x1700000, 0x7D00, 
				0x1780000, 0x7D00, 
				0x1800000, 0x7D00, 
				0x1880000, 0x7D00, 
				0x1900000, 0x7D00, 
				0x1980000, 0x7D00, 
				0x1A00000, 0x7D00, 
				0x1A80000, 0x7D00, 
				0x1B00000, 0x7D00, 
				0x1B00000, 0x87D00, 
				0x1B00000, 0x107D00, 
				0x1B00000, 0x187D00, 
				0x1B00000, 0x207D00, 
				0x1B00000, 0x287D00, 
				0x1B00000, 0x307D00, 
				0x1B00000, 0x387D00, 
				0x1B00000, 0x407D00, 
				0x1B00000, 0x487D00, 
				0x1B00000, 0x507D00, 
				0x1B00000, 0x587D00, 
				0x1B00000, 0x607D00, 
				0x1B00000, 0x687D00, 
				0x1B00000, 0x707D00, 
				0x1B00000, 0x787D00, 
				0x1B00000, 0x807D00, 
				0x1B00000, 0x887D00, 
				0x1B00000, 0x907D00, 
				0x1B00000, 0x987D00, 
				0x1B00000, 0xA07D00, 
				0x1B00000, 0xA87D00, 
				0x1B00000, 0xB07D00, 
				0x1B00000, 0xB87D00, 
				0x1B00000, 0xC07D00, 
				0x1B00000, 0xC87D00, 
				0x1B00000, 0xD07D00, 
				0x1B00000, 0xD87D00, 
				0x1B00000, 0xE07D00, 
				0x1B00000, 0xE87D00, 
				0x1B00000, 0xF07D00, 
				0x1B00000, 0xF87D00, 
				0x1B00000, 0x1007D00, 
				0x1B80000, 0x1007D00, 
				0x1C00000, 0x1007D00, 
				0x1C80000, 0x1007D00, 
				0x1D00000, 0x1007D00, 
				0x1D80000, 0x1007D00, 
				0x1E00000, 0x1007D00, 
				0x1E80000, 0x1007D00, 
				0x1F00000, 0x1007D00, 
				0x1F80000, 0x1007D00, 
				0x2000000, 0x1007D00, 
				0x2080000, 0x1007D00, 
				0x2100000, 0x1007D00, 
				0x2180000, 0x1007D00, 
				0x2200000, 0x1007D00, 
				0x2280000, 0x1007D00, 
				0x2300000, 0x1007D00, 
				0x2380000, 0x1007D00, 
				0x2400000, 0x1007D00, 
				0x2480000, 0x1007D00, 
				0x2500000, 0x1007D00, 
				0x2580000, 0x1007D00, 
				0x2600000, 0x1007D00, 
				0x2680000, 0x1007D00, 
				0x2700000, 0x1007D00, 
				0x2780000, 0x1007D00, 
				0x2800000, 0x1007D00, 
				0x2880000, 0x1007D00, 
				0x2900000, 0x1007D00, 
				0x2980000, 0x1007D00, 
				0x2A00000, 0x1007D00, 
				0x2A80000, 0x1007D00, 
				0x2B00000, 0x1007D00, 
				0x2B80000, 0x1007D00, 
				0x2C00000, 0x1007D00, 
				0x2C80000, 0x1007D00, 
				0x2D00000, 0x1007D00, 
				0x2D80000, 0x1007D00, 
				0x2E00000, 0x1007D00, 
				0x2E80000, 0x1007D00, 
				0x2F00000, 0x1007D00, 
				0x2F80000, 0x1007D00, 
				0x3000000, 0x1007D00, 
				0x3080000, 0x1007D00, 
				0x3100000, 0x1007D00, 
				0x3180000, 0x1007D00, 
				0x3200000, 0x1007D00, 
				0x3280000, 0x1007D00, 
				0x3300000, 0x1007D00, 
				0x3380000, 0x1007D00, 
				0x3400000, 0x1007D00, 
				0x3480000, 0x1007D00, 
				0x3500000, 0x1007D00, 
				0x3580000, 0x1007D00, 
				0x3600000, 0x1007D00, 
				0x3680000, 0x1007D00, 
				0x3700000, 0x1007D00, 
				0x3780000, 0x1007D00, 
				0x3800000, 0x1007D00, 
				0x3880000, 0x1007D00, 
				0x3900000, 0x1007D00, 
				0x3980000, 0x1007D00, 
				0x3A00000, 0x1007D00, 
				0x3A80000, 0x1007D00, 
				0x3B00000, 0x1007D00, 
				0x3B80000, 0x1007D00, 
				0x3C00000, 0x1007D00, 
				0x3C80000, 0x1007D00, 
				0x3D00000, 0x1007D00, 
				0x3D80000, 0x1007D00, 
				0x3E00000, 0x1007D00
			};
		}
	}
	
	class TunnelPath9 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x3800, 0x7D00,
				0x3800, 0x87D00,
				0x3800, 0x107D00,
				0x3800, 0x187D00,
				0x3800, 0x207D00,
				0x3800, 0x287D00,
				0x3800, 0x307D00,
				0x3800, 0x387D00,
				0x3800, 0x407D00,
				0x3800, 0x487D00,
				0x3800, 0x507D00,
				0x3800, 0x587D00,
				0x3800, 0x607D00,
				0x3800, 0x687D00,
				0x3800, 0x707D00,
				0x3800, 0x787D00,
				0x3800, 0x807D00,
				0x3800, 0x887D00,
				0x3800, 0x907D00,
				0x3800, 0x987D00,
				0x3800, 0xA07D00,
				0x3800, 0xA87D00,
				0x3800, 0xB07D00,
				0x3800, 0xB87D00,
				0x3800, 0xC07D00,
				0x3800, 0xC87D00,
				0x3800, 0xD07D00,
				0x3800, 0xD87D00,
				0x3800, 0xE07D00,
				0x3800, 0xE87D00,
				0x3800, 0xF07D00,
				0x3800, 0xF87D00,
				0x3800, 0x1007D00,
				0x3800, 0x1087D00,
				0x3800, 0x1107D00,
				0x3800, 0x1187D00,
				0x3800, 0x1207D00,
				0x3800, 0x1287D00,
				0x3800, 0x1307D00,
				0x3800, 0x1387D00,
				0x3800, 0x1407D00,
				0x3800, 0x1487D00,
				0x3800, 0x1507D00,
				0x3800, 0x1587D00,
				0x3800, 0x1607D00,
				0x3800, 0x1687D00,
				0x3800, 0x1707D00,
				0x3800, 0x1787D00,
				0x3800, 0x1807D00,
				0x3800, 0x1887D00,
				0x3800, 0x1907D00,
				0x3800, 0x1987D00,
				0x3800, 0x1A07D00,
				0x3800, 0x1A87D00,
				0x3800, 0x1B07D00,
				0x3800, 0x1B87D00,
				0x3800, 0x1C07D00,
				0x3800, 0x1C87D00,
				0x3800, 0x1D07D00,
				0x3800, 0x1D87D00,
				0x3800, 0x1E07D00,
				0x3800, 0x1E87D00,
				0x3800, 0x1F07D00,
				0x3800, 0x1F87D00,
				0x3800, 0x2007D00,
				0x3800, 0x2087D00,
				0x3800, 0x2107D00,
				0x3800, 0x2187D00,
				0x3800, 0x2207D00,
				0x3800, 0x2287D00,
				0x3800, 0x2307D00,
				0x3800, 0x2387D00,
				0x3800, 0x2407D00,
				0x3800, 0x2487D00,
				0x3800, 0x2507D00,
				0x3800, 0x2587D00,
				0x3800, 0x2607D00,
				0x3800, 0x2687D00,
				0x3800, 0x2707D00,
				0x3800, 0x2787D00,
				0x3800, 0x2807D00,
				0x3800, 0x2887D00,
				0x3800, 0x2907D00,
				0x3800, 0x2987D00,
				0x3800, 0x2A07D00,
				0x3800, 0x2A87D00,
				0x83800, 0x2A87D00,
				0x103800, 0x2A87D00,
				0x183800, 0x2A87D00,
				0x203800, 0x2A87D00,
				0x283800, 0x2A87D00,
				0x303800, 0x2A87D00,
				0x383800, 0x2A87D00,
				0x403800, 0x2A87D00,
				0x483800, 0x2A87D00,
				0x503800, 0x2A87D00,
				0x583800, 0x2A87D00,
				0x603800, 0x2A87D00,
				0x683800, 0x2A87D00,
				0x703800, 0x2A87D00,
				0x783800, 0x2A87D00,
				0x803800, 0x2A87D00,
				0x883800, 0x2A87D00,
				0x903800, 0x2A87D00,
				0x983800, 0x2A87D00,
				0xA03800, 0x2A87D00,
				0xA83800, 0x2A87D00,
				0xB03800, 0x2A87D00,
				0xB83800, 0x2A87D00,
				0xC03800, 0x2A87D00,
				0xC83800, 0x2A87D00,
				0xD03800, 0x2A87D00,
				0xD83800, 0x2A87D00,
				0xE03800, 0x2A87D00,
				0xE83800, 0x2A87D00,
				0xF03800, 0x2A87D00,
				0xF83800, 0x2A87D00,
				0x1003800, 0x2A87D00,
				0x1083800, 0x2A87D00,
				0x1103800, 0x2A87D00,
				0x1183800, 0x2A87D00,
				0x1203800, 0x2A87D00,
				0x1283800, 0x2A87D00,
				0x1303800, 0x2A87D00,
				0x1383800, 0x2A87D00,
				0x1403800, 0x2A87D00,
				0x1483800, 0x2A87D00,
				0x1503800, 0x2A87D00,
				0x1583800, 0x2A87D00,
				0x1603800, 0x2A87D00,
				0x1683800, 0x2A87D00,
				0x1703800, 0x2A87D00,
				0x1783800, 0x2A87D00,
				0x1803800, 0x2A87D00,
				0x1883800, 0x2A87D00,
				0x1903800, 0x2A87D00,
				0x1983800, 0x2A87D00,
				0x1A03800, 0x2A87D00,
				0x1A83800, 0x2A87D00,
				0x1B03800, 0x2A87D00,
				0x1B83800, 0x2A87D00,
				0x1C03800, 0x2A87D00,
				0x1C83800, 0x2A87D00,
				0x1D03800, 0x2A87D00,
				0x1D83800, 0x2A87D00,
				0x1E03800, 0x2A87D00,
				0x1E83800, 0x2A87D00,
				0x1F03800, 0x2A87D00,
				0x1F83800, 0x2A87D00,
				0x2003800, 0x2A87D00,
				0x2083800, 0x2A87D00,
				0x2103800, 0x2A87D00,
				0x2183800, 0x2A87D00,
				0x2203800, 0x2A87D00,
				0x2283800, 0x2A87D00,
				0x2303800, 0x2A87D00,
				0x2383800, 0x2A87D00,
				0x2403800, 0x2A87D00,
				0x2483800, 0x2A87D00,
				0x2503800, 0x2A87D00,
				0x2583800, 0x2A87D00,
				0x2603800, 0x2A87D00,
				0x2683800, 0x2A87D00,
				0x2703800, 0x2A87D00,
				0x2783800, 0x2A87D00,
				0x2803800, 0x2A87D00,
				0x2883800, 0x2A87D00,
				0x2903800, 0x2A87D00,
				0x2983800, 0x2A87D00,
				0x2A03800, 0x2A87D00,
				0x2A83800, 0x2A87D00,
				0x2B03800, 0x2A87D00,
				0x2B83800, 0x2A87D00,
				0x2C03800, 0x2A87D00,
				0x2C83800, 0x2A87D00,
				0x2D03800, 0x2A87D00,
				0x2D83800, 0x2A87D00,
				0x2E03800, 0x2A87D00,
				0x2E83800, 0x2A87D00,
				0x2F03800, 0x2A87D00,
				0x2F83800, 0x2A87D00,
				0x3003800, 0x2A87D00,
				0x3083800, 0x2A87D00,
				0x3103800, 0x2A87D00,
				0x3183800, 0x2A87D00,
				0x3203800, 0x2A87D00,
				0x3283800, 0x2A87D00,
				0x3303800, 0x2A87D00,
				0x3383800, 0x2A87D00,
				0x3403800, 0x2A87D00,
				0x3483800, 0x2A87D00,
				0x3503800, 0x2A87D00,
				0x3583800, 0x2A87D00,
				0x3603800, 0x2A87D00,
				0x3683800, 0x2A87D00,
				0x3703800, 0x2A87D00,
				0x3783800, 0x2A87D00,
				0x3803800, 0x2A87D00,
				0x3883800, 0x2A87D00,
				0x3903800, 0x2A87D00,
				0x3983800, 0x2A87D00,
				0x3A03800, 0x2A87D00,
				0x3A83800, 0x2A87D00,
				0x3B03800, 0x2A87D00,
				0x3B83800, 0x2A87D00,
				0x3C03800, 0x2A87D00,
				0x3C03800, 0x2A07D00,
				0x3C03800, 0x2987D00,
				0x3C03800, 0x2907D00,
				0x3C03800, 0x2887D00,
				0x3C03800, 0x2807D00,
				0x3C03800, 0x2787D00,
				0x3C03800, 0x2707D00,
				0x3C03800, 0x2687D00,
				0x3C03800, 0x2607D00,
				0x3C03800, 0x2587D00,
				0x3C03800, 0x2507D00,
				0x3C03800, 0x2487D00,
				0x3C03800, 0x2407D00,
				0x3C03800, 0x2387D00,
				0x3C03800, 0x2307D00,
				0x3C03800, 0x2287D00,
				0x3C03800, 0x2207D00,
				0x3C03800, 0x2187D00,
				0x3C03800, 0x2107D00,
				0x3C03800, 0x2087D00,
				0x3C03800, 0x2007D00,
				0x3C03800, 0x1F87D00,
				0x3C03800, 0x1F07D00,
				0x3C03800, 0x1E87D00,
				0x3C03800, 0x1E07D00,
				0x3C03800, 0x1D87D00,
				0x3C03800, 0x1D07D00,
				0x3C03800, 0x1C87D00,
				0x3C03800, 0x1C07D00,
				0x3C03800, 0x1B87D00,
				0x3C03800, 0x1B07D00,
				0x3C03800, 0x1A87D00,
				0x3B83800, 0x1A87D00,
				0x3B03800, 0x1A87D00,
				0x3A83800, 0x1A87D00,
				0x3A03800, 0x1A87D00,
				0x3983800, 0x1A87D00,
				0x3903800, 0x1A87D00,
				0x3883800, 0x1A87D00,
				0x3803800, 0x1A87D00,
				0x3783800, 0x1A87D00,
				0x3703800, 0x1A87D00,
				0x3683800, 0x1A87D00,
				0x3603800, 0x1A87D00,
				0x3583800, 0x1A87D00,
				0x3503800, 0x1A87D00,
				0x3483800, 0x1A87D00,
				0x3403800, 0x1A87D00,
				0x3383800, 0x1A87D00,
				0x3303800, 0x1A87D00,
				0x3283800, 0x1A87D00,
				0x3203800, 0x1A87D00,
				0x3183800, 0x1A87D00,
				0x3103800, 0x1A87D00,
				0x3083800, 0x1A87D00,
				0x3003800, 0x1A87D00,
				0x2F83800, 0x1A87D00,
				0x2F03800, 0x1A87D00,
				0x2E83800, 0x1A87D00,
				0x2E03800, 0x1A87D00,
				0x2D83800, 0x1A87D00,
				0x2D03800, 0x1A87D00,
				0x2C83800, 0x1A87D00,
				0x2C03800, 0x1A87D00,
				0x2B83800, 0x1A87D00,
				0x2B03800, 0x1A87D00,
				0x2A83800, 0x1A87D00,
				0x2A03800, 0x1A87D00,
				0x2983800, 0x1A87D00,
				0x2903800, 0x1A87D00,
				0x2883800, 0x1A87D00,
				0x2803800, 0x1A87D00,
				0x2783800, 0x1A87D00,
				0x2703800, 0x1A87D00,
				0x2683800, 0x1A87D00,
				0x2603800, 0x1A87D00,
				0x2583800, 0x1A87D00,
				0x2503800, 0x1A87D00,
				0x2483800, 0x1A87D00,
				0x2403800, 0x1A87D00,
				0x2383800, 0x1A87D00,
				0x2303800, 0x1A87D00,
				0x2283800, 0x1A87D00,
				0x2203800, 0x1A87D00,
				0x2183800, 0x1A87D00,
				0x2103800, 0x1A87D00,
				0x2083800, 0x1A87D00,
				0x2003800, 0x1A87D00,
				0x1F83800, 0x1A87D00,
				0x1F03800, 0x1A87D00,
				0x1E83800, 0x1A87D00,
				0x1E03800, 0x1A87D00,
				0x1D83800, 0x1A87D00,
				0x1D03800, 0x1A87D00,
				0x1C83800, 0x1A87D00,
				0x1C03800, 0x1A87D00,
				0x1B03800, 0x1A87D00,
				0x1A83800, 0x1A87D00,
				0x1A03800, 0x1A87D00,
				0x1983800, 0x1A87D00,
				0x1903800, 0x1A87D00
			};
		}
	}
	
	class TunnelPath10 : R6.TunnelPath
	{
		public override int[] GetPath()
		{
			return new int[] {
				0x5200, 0x3500,
				0x5200, 0x83500,
				0x5200, 0x103500,
				0x5200, 0x183500,
				0x5200, 0x203500,
				0x5200, 0x283500,
				0x5200, 0x303500,
				0x5200, 0x383500,
				0x5200, 0x403500,
				0x5200, 0x483500,
				0x5200, 0x503500,
				0x5200, 0x583500,
				0x5200, 0x603500,
				0x5200, 0x683500,
				0x5200, 0x703500,
				0x5200, 0x783500,
				0x5200, 0x803500,
				0x5200, 0x883500,
				0x5200, 0x903500,
				0x5200, 0x983500,
				0x5200, 0xA03500,
				0x5200, 0xA83500,
				0x5200, 0xB03500,
				0x5200, 0xB83500,
				0x5200, 0xC03500,
				0x5200, 0xC83500,
				0x5200, 0xD03500,
				0x5200, 0xD83500,
				0x5200, 0xE03500,
				0x5200, 0xE83500,
				0x5200, 0xF03500,
				0x5200, 0xF83500,
				0x5200, 0x1003500,
				0x5200, 0x1083500,
				0x5200, 0x1103500,
				0x5200, 0x1183500,
				0x5200, 0x1203500,
				0x5200, 0x1283500,
				0x5200, 0x1303500,
				0x5200, 0x1383500,
				0x5200, 0x1403500,
				0x5200, 0x1483500,
				0x5200, 0x1503500,
				0x5200, 0x1583500,
				0x5200, 0x1603500,
				0x5200, 0x1683500,
				0x5200, 0x1703500,
				0x5200, 0x1783500,
				0x5200, 0x1803500,
				0x5200, 0x1883500,
				0x5200, 0x1903500,
				0x5200, 0x1983500,
				0x5200, 0x1A03500,
				0x5200, 0x1A83500,
				0x5200, 0x1B03500,
				0x5200, 0x1B83500,
				0x5200, 0x1C03500,
				0x5200, 0x1C83500,
				0x5200, 0x1D03500,
				0x5200, 0x1D83500,
				0x5200, 0x1E03500,
				0x5200, 0x1E83500,
				0x5200, 0x1F03500,
				0x5200, 0x1F83500,
				0x5200, 0x2003500,
				0x5200, 0x2083500,
				0x5200, 0x2103500,
				0x5200, 0x2183500,
				0x5200, 0x2203500,
				0x5200, 0x2283500,
				0x5200, 0x2303500,
				0x5200, 0x2383500,
				0x5200, 0x2403500,
				0x5200, 0x2483500,
				0x5200, 0x2503500,
				0x5200, 0x2583500,
				0x5200, 0x2603500,
				0x5200, 0x2683500,
				0x5200, 0x2703500,
				0x5200, 0x2783500,
				0x5200, 0x2803500,
				0x5200, 0x2883500,
				0x5200, 0x2903500,
				0x5200, 0x2983500,
				0x5200, 0x2A03500,
				0x5200, 0x2A83500,
				0x5200, 0x2B03500,
				0x5200, 0x2B83500,
				-0x7AE00, 0x2B83500,
				-0xFAE00, 0x2B83500,
				-0x17AE00, 0x2B83500,
				-0x1FAE00, 0x2B83500,
				-0x27AE00, 0x2B83500,
				-0x2FAE00, 0x2B83500,
				-0x37AE00, 0x2B83500,
				-0x3FAE00, 0x2B83500,
				-0x47AE00, 0x2B83500,
				-0x4FAE00, 0x2B83500,
				-0x57AE00, 0x2B83500,
				-0x5FAE00, 0x2B83500,
				-0x67AE00, 0x2B83500,
				-0x6FAE00, 0x2B83500,
				-0x77AE00, 0x2B83500,
				-0x77AE00, 0x2C03500,
				-0x77AE00, 0x2C83500,
				-0x77AE00, 0x2D03500,
				-0x77AE00, 0x2D83500,
				-0x77AE00, 0x2E03500,
				-0x77AE00, 0x2E83500,
				-0x77AE00, 0x2F03500,
				-0x77AE00, 0x2F83500,
				-0x77AE00, 0x3003500,
				-0x77AE00, 0x3083500,
				-0x77AE00, 0x3103500,
				-0x77AE00, 0x3183500,
				-0x77AE00, 0x3203500,
				-0x77AE00, 0x3283500,
				-0x77AE00, 0x3303500,
				-0x77AE00, 0x3383500,
				-0x77AE00, 0x3403500,
				-0x77AE00, 0x3483500,
				-0x77AE00, 0x3503500,
				-0x77AE00, 0x3583500,
				-0x77AE00, 0x3603500,
				-0x77AE00, 0x3683500,
				-0x6FAE00, 0x3683500,
				-0x67AE00, 0x3683500,
				-0x5FAE00, 0x3683500,
				-0x57AE00, 0x3683500,
				-0x4FAE00, 0x3683500,
				-0x47AE00, 0x3683500,
				-0x3FAE00, 0x3683500,
				-0x37AE00, 0x3683500,
				-0x2FAE00, 0x3683500,
				-0x27AE00, 0x3683500,
				-0x1FAE00, 0x3683500,
				-0x17AE00, 0x3683500,
				-0x1C7A00, 0x3703500,
				-0x214600, 0x3783500,
				-0x261200, 0x3803500,
				-0x2ADE00, 0x3883500,
				-0x2FAA00, 0x3903500,
				-0x347600, 0x3983500,
				-0x394200, 0x3A03500,
				-0x3E0E00, 0x3A83500,
				-0x42DA00, 0x3B03500,
				-0x47A600, 0x3B83500,
				-0x4FA600, 0x3B83500,
				-0x57A600, 0x3B83500,
				-0x5FA600, 0x3B83500,
				-0x67A600, 0x3B83500,
				-0x6FA600, 0x3B83500,
				-0x77A600, 0x3B83500,
				-0x7FA600, 0x3B83500,
				-0x87A600, 0x3B83500,
				-0x8FA600, 0x3B83500,
				-0x97A600, 0x3B83500,
				-0x9FA600, 0x3B83500,
				-0xA7A600, 0x3B83500,
				-0x9FA600, 0x3B83500,
				-0x97A600, 0x3B83500,
				-0x8FA600, 0x3B83500,
				-0x87A600, 0x3B83500,
				-0x7FA600, 0x3B83500,
				-0x77A600, 0x3B83500,
				-0x6FA600, 0x3B83500,
				-0x67A600, 0x3B83500,
				-0x5FA600, 0x3B83500,
				-0x57A600, 0x3B83500,
				-0x4FA600, 0x3B83500,
				-0x47A600, 0x3B83500,
				-0x47A600, 0x3C03500,
				-0x47A600, 0x3C83500,
				-0x47A600, 0x3D03500,
				-0x47A600, 0x3D83500,
				-0x47A600, 0x3E03500,
				-0x47A600, 0x3E83500,
				-0x47A600, 0x3F03500,
				-0x47A600, 0x3F83500,
				-0x3FA600, 0x3F83500,
				-0x37A600, 0x3F83500,
				-0x2FA600, 0x3F83500,
				-0x27A600, 0x3F83500,
				-0x1FA600, 0x3F83500,
				-0x17A600, 0x3F83500,
				-0xFA600, 0x3F83500,
				-0x7A600, 0x3F83500,
				0x5A00, 0x3F83500,
				0x85A00, 0x3F83500,
				0x105A00, 0x3F83500,
				0x185A00, 0x3F83500,
				0x185A00, 0x4003500,
				0x185A00, 0x4083500,
				0x185A00, 0x4103500,
				0x185A00, 0x4183500,
				0x185A00, 0x4203500,
				0x185A00, 0x4283500,
				0x185A00, 0x4303500,
				0x185A00, 0x4383500,
				0x185A00, 0x4403500,
				0x185A00, 0x4483500,
				0x185A00, 0x4503500,
				0x185A00, 0x4583500,
				0x105A00, 0x4583500,
				0x85A00, 0x4583500,
				0x5A00, 0x4583500,
				-0x7A600, 0x4583500,
				-0xFA600, 0x4583500,
				-0x17A600, 0x4583500,
				-0x1FA600, 0x4583500,
				-0x27A600, 0x4583500,
				-0x2FA600, 0x4583500,
				-0x37A600, 0x4583500,
				-0x37A600, 0x4603500,
				-0x37A600, 0x4683500,
				-0x37A600, 0x4703500,
				-0x37A600, 0x4783500,
				-0x37A600, 0x4803500,
				-0x37A600, 0x4883500,
				-0x37A600, 0x4903500,
				-0x37A600, 0x4983500,
				-0x37A600, 0x4A03500,
				-0x37A600, 0x4A83500,
				-0x37A600, 0x4B03500,
				-0x37A600, 0x4B83500,
				-0x37A600, 0x4C03500,
				-0x37A600, 0x4C83500,
				-0x37A600, 0x4D03500,
				-0x37A600, 0x4D83500,
				-0x37A600, 0x4E03500,
				-0x37A600, 0x4E83500
			};
		}
	}
	
	abstract class TunnelPath : ObjectDefinition
	{
		private Sprite sprite;
		private Sprite debug;
		
		public abstract int[] GetPath();
		
		public override void Init(ObjectData data)
		{
			sprite = new Sprite(LevelData.GetSpriteSheet("Global/Display.gif").GetSection(173, 67, 16, 16), -8, -8);
			
			debug = DrawPath(GetPath());
		}

		public override ReadOnlyCollection<byte> Subtypes
		{
			get { return new ReadOnlyCollection<byte>(new byte[0]); }
		}
		
		public override bool Debug
		{
			get { return true; }
		}
		
		public override string SubtypeName(byte subtype)
		{
			return null;
		}

		public override Sprite Image
		{
			get { return sprite; }
		}

		public override Sprite SubtypeImage(byte subtype)
		{
			return sprite;
		}

		public override Sprite GetSprite(ObjectEntry obj)
		{
			return sprite;
		}
		
		public override Sprite GetDebugOverlay(ObjectEntry obj)
		{
			return debug;
		}
		
		private Sprite DrawPath(int[] path)
		{
			int xmin = 0x7fff;
			int ymin = 0x7fff;
			int xmax = -0x7fff;
			int ymax = -0x7fff;
			
			for (int i = 0; i < path.Length; i += 2)
			{
				xmin = Math.Min(xmin, path[i] >> 16);
				ymin = Math.Min(ymin, path[i+1] >> 16);
				xmax = Math.Max(xmax, path[i] >> 16);
				ymax = Math.Max(ymax, path[i+1] >> 16);
			}
			
			BitmapBits bitmap = new BitmapBits(xmax - xmin + 1, ymax - ymin + 1);
			
			for (int i = 2; i < path.Length; i += 2)
				bitmap.DrawLine(6, (path[i-2] >> 16) - xmin, (path[i-1] >> 16) - ymin, (path[i] >> 16) - xmin, (path[i+1] >> 16) - ymin); // LevelData.ColorWhite
			
			return new Sprite(bitmap, xmin, ymin);
		}
	}
}